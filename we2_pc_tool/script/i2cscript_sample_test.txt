// ---------------------------------------------------------------------
// W : register write
// [Syntax]W:{address}:{value}:{address size}:{value size}
// W:C00D:80:2:1
// R : register read
// [Syntax]R:{address}:{address size}:{value size}
// R:C00D:2:2
// P : polling value
// [Syntax]R:{address}:{address size}:{value size}
// P:C00D:80:2:2:10
// C : register compare
// [Syntax]C:{address}:{value}:{address size}:{value size}:{Polling Count}
// C:C00D:21:2:1
// BW : burst write (write sequencial data 0x00 0x01 0x02 ........)
// [Syntax]BW:{address must 4 byte address}:{value size must 4 aligment, max support 1K size}
// BW:C00D0000:FA
// WDATA : burst write (write sequencial data 0x00 0x01 0x02 ........)
// [Syntax]WDATA:{2 char for 1 byte/MSB first}:{value size < 255}
// WDATA:000102030405060708090A0B0C0D0E0F:16
// #include
// [Syntax]#include {"Path"}
// ID : I2C Slave Address
// [Syntax] ID:{slave address - 7¡¦h}
// DELAY: delay ms
// [Syntax] DELAY:{ms}
// ---------------------------------------------------------------------
ID:28
W:D8:02:1:1
R:D8:1:1
R:D8:1:1
R:D8:1:1
W:D8:00:1:1
R:D8:1:1
WDATA:000102030405060708090A0B0C0D0E0F:10

